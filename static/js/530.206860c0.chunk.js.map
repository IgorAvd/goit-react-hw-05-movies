{"version":3,"file":"static/js/530.206860c0.chunk.js","mappings":"sIAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CACIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,C,8FCbaS,EAAY,SAAHC,GAAuC,IAAjCN,EAAKM,EAALN,MAAOO,EAAQD,EAARC,SAAUC,EAAQF,EAARE,SAC3C,OACEC,EAAAA,EAAAA,KAAA,QAAMD,SAAUA,EAASE,UACvBC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,SACEG,KAAK,OACLZ,MAAOA,EACPO,SAAU,SAAAM,GAAC,OAAIN,EAASM,EAAEC,OAAOd,MAAM,EACvCe,UAAQ,KAEVN,EAAAA,EAAAA,KAAA,UAAQG,KAAK,SAAQF,SAAC,eAI9B,E,0BC+BA,EAvCe,WAAO,IAADM,EACnBC,GAAwCC,EAAAA,EAAAA,WAAS,WAC/C,IAAMC,EAAcC,aAAaC,QAAQ,kBACzC,OAAOF,EAAcG,KAAKC,MAAMJ,GAAe,IACjD,IAAEK,GAAAC,EAAAA,EAAAA,GAAAR,EAAA,GAHKS,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAIpCI,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,EAAoC,QAA3BjB,EAAGe,EAAaG,IAAI,eAAO,IAAAlB,EAAAA,EAAI,GAOxCmB,EAAY,eFLsBC,EEKtB9B,GFLsB8B,EEKtBC,IAAAA,MAAG,SAAAC,EAAMzB,GAAC,IAAA0B,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACP,OAAnB7B,EAAE8B,iBAAiBH,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEME,EAAAA,EAAAA,IAAiBX,GAAW,KAAD,EAA5CM,EAAQC,EAAAK,KACdlB,EAAgBY,EAASO,KAAKC,SAC9B3B,aAAa4B,QACX,iBACA1B,KAAK2B,UAAUV,EAASO,KAAKC,UAC7BP,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAEFW,QAAQlD,MAAKuC,EAAAU,IAAQ,yBAAAV,EAAAY,OAAA,GAAAd,EAAA,iBFdlB,WACL,IAAIe,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIrD,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAM4C,EAAGqB,MAAMJ,EAAME,GACzB,SAAS5D,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAO8D,GACdnE,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAAS8D,EACnE,CACA/D,OAAMgE,EACR,GACF,GEGC,gBAZiBC,GAAA,OAAAtD,EAAAmD,MAAA,KAAAD,UAAA,KAclB,OACE7C,EAAAA,EAAAA,MAAAkD,EAAAA,SAAA,CAAAnD,SAAA,EACED,EAAAA,EAAAA,KAACJ,EAAS,CACRL,MAAOiC,EACPzB,SAAU2B,EACV5B,SAxBoB,SAAAuD,GAExB9B,EAD4B,KAAT8B,EAAc,CAAEA,KAAAA,GAAS,CAAC,EAE/C,KAuBIrD,EAAAA,EAAAA,KAACsD,EAAAA,EAAS,CAACjB,KAAMpB,MAGvB,C","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/SearchBox/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","export const SearchBox = ({ value, onChange, onSubmit }) => {\n  return (\n    <form onSubmit={onSubmit}>\n      <div>\n        <input\n          type=\"text\"\n          value={value}\n          onChange={e => onChange(e.target.value)}\n          required\n        />\n        <button type=\"submit\">Search</button>\n      </div>\n    </form>\n  );\n};\n","import { MovieList } from 'components/MovieList/MovieList';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieBySearch } from 'services/api';\n\nconst Movies = () => {\n  const [searchMovies, setSearchMovies] = useState(() => {\n    const savedMovies = localStorage.getItem('searchedMovies');\n    return savedMovies ? JSON.parse(savedMovies) : null;\n  });\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('name') ?? '';\n\n  const updateQueryString = name => {\n    const nextParams = name !== '' ? { name } : {};\n    setSearchParams(nextParams);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await getMovieBySearch(movieName);\n      setSearchMovies(response.data.results);\n      localStorage.setItem(\n        'searchedMovies',\n        JSON.stringify(response.data.results)\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <SearchBox\n        value={movieName}\n        onSubmit={handleSubmit}\n        onChange={updateQueryString}\n      />\n      <MovieList data={searchMovies} />\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","SearchBox","_ref","onChange","onSubmit","_jsx","children","_jsxs","type","e","target","required","_searchParams$get","_useState","useState","savedMovies","localStorage","getItem","JSON","parse","_useState2","_slicedToArray","searchMovies","setSearchMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","movieName","get","handleSubmit","fn","_regeneratorRuntime","_callee","response","_context","prev","next","preventDefault","getMovieBySearch","sent","data","results","setItem","stringify","t0","console","stop","self","this","args","arguments","apply","err","undefined","_x","_Fragment","name","MovieList"],"sourceRoot":""}